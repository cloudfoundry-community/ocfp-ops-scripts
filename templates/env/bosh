#!/usr/bin/env bash

fail() { echo -e "$*" >&2 ; exit 1 ; }

[[ -n ${OCFP_IAAS:-} ]]     || fail "OCFP_IAAS     must be set and exported."
[[ -n ${OCFP_REGION:-} ]]   || fail "OCFP_REGION   must be set and exported."
[[ -n ${OCFP_ENV_NAME:-} ]] || fail "OCFP_ENV_NAME must be set and exported."
[[ -n ${OCFP_VAULT_PREFIX:-} ]] || fail "OCFP_VAULT_PREFIX must be set and exported."

usage() {
  echo -e "$(cat <<EOT

USAGE

  $ export OCFP_IAAS="..." OCFP_REGION="..." OCFP_ENV_NAME="..." 
  $ ${0}

EOT
)" >&2
exit 1
}

fail() { echo -e "$*" >&2 ; exit 1 ; }

case "${OCFP_ENV_NAME}" in
  (*-mgmt-*) env_type="mgmt" ;;
  (*)        env_type="ocf" ;;
esac

cat <<-YAML
---
kit:
  name: bosh
  version: 2.2.7-rc.42 # minimum version for external-db-vault
  features:
  - (( append ))
  - ${OCFP_IAAS}
  - ocfp

genesis:
  env: ${OCFP_ENV_NAME}
  min_version: 2.8.5 # TODO: bump to 2.8.6 when released
YAML

case "${env_type}" in
  (*mgmt*) 
    echo "  use_create_env: true # REQUIRED for Mgmt env"
    ;;
  (*) 
    echo "  bosh_env: ${OCFP_BOSH_ENV} # Who deploys me?"
    ;;
esac

case "${OCFP_VAULT_PREFIX}" in
  (secret/*) echo "  secrets_mount: \"${OCFP_VAULT_PREFIX}\"" ;;
  (*) true ;;
esac

cat <<-YAML

params:
#  ocfp:
#    env:
#      scale: "prod" # default is "dev"
  dns_cache: true # DNS Caching (for runtime config)
YAML

