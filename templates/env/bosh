#!/usr/bin/env bash

fail() { echo -e "$*" >&2 ; exit 1 ; }

[[ -n ${OCFP_IAAS:-} ]]     || fail "OCFP_IAAS     must be set and exported."
[[ -n ${OCFP_REGION:-} ]]   || fail "OCFP_REGION   must be set and exported."
[[ -n ${OCFP_ENV_TYPE:-} ]] || fail "OCFP_ENV_TYPE must be set and exported."
[[ -n ${OCFP_ENV_NAME:-} ]] || fail "OCFP_ENV_NAME must be set and exported."

usage() {
  echo -e "$(cat <<EOT

USAGE

  $ export OCFP_IAAS="..." OCFP_REGION="..." OCFP_ENV_TYPE="..." OCFP_ENV_NAME="..." 
  $ ${0}

EOT
)" >&2
exit 1
}

fail() { echo -e "$*" >&2 ; exit 1 ; }

cat <<-YAML
---
kit:
  name: bosh
  version: 2.2.6-rc.4
  features:
  - (( append ))
  - ${OCFP_IAAS}
  - external-db-vault
  - bosh-dns-health-check
  - netop-access
  - sysop-access
YAML

case ${OCFP_ENV_TYPE} in
  (*mgmt*) echo "  - proto # legacy name" ;;
  (*) true ;;
esac

case ${OCFP_IAAS} in
  (aws) echo "  - s3-blobstore" ;;
  (gcp) echo "  - gcp-blobstore" ;;
  (azure) echo "  - azure-blobstore" ;;
  (*) true ;;
esac

cat <<-YAML

genesis:
  env: ${OCFP_ENV_NAME}
  min_version: 2.8.5
YAML

case ${OCFP_VAULT_PREFIX} in
  (secret/*) echo "  secrets_mount: \"${OCFP_VAULT_PREFIX}\"" ;;
  (*) true ;;
esac

cat <<-YAML

meta:
  vault_certs: "${OCFP_VAULT_PREFIX:-"secret"}/certs" 
  vault_tf: (( concat ${OCFP_VAULT_PREFIX:-"secret"} "/${OCFP_REGION//-/\/}" ))

params:
  trusted_certs:
  - (( vault meta.vault_certs "/dbs:ca" )) # Databases CA
  - (( vault meta.vault_certs "/org:ca" )) # Organizaion CA, if exists

  subnet_addr: (( vault meta.vault_tf "/iaas/subnets/ocfp/1:cidr_block" ))

  default_gateway: (( vault meta.vault_tf "/iaas/ocfp/mgmt/bosh:gateway" ))

  dns: 
    - (( vault meta.vault_tf "ocfp/mgmt/bosh:dns" ))

  static_ip: (( vault meta.vault_tf "ocfp/mgmt/bosh:ip" ))
  
  aws_region: "${OCFP_REGION}"
  
  aws_default_sgs:
    - (( vault meta.vault_tf "iaas/sgs/default:id" ))
    - (( vault meta.vault_tf "iaas/sgs/${OCFP_ENV_TYPE}:id" ))
  
YAML

case ${OCFP_ENV_NAME} in
  (*-mgmt-*)
    cat <<-YAML
  aws_subnet_id: (( vault meta.vault_tf "iaas/subnets/ocfp/1:id" ))
  
  aws_security_groups: (default,bosh)
    - (( vault meta.vault_tf "iaas/sgs/default:id" ))
    - (( vault meta.vault_tf "iaas/sgs/${OCFP_ENV_TYPE}:id" ))

YAML
    ;;
  (*) true ;; # ocf env (eg. non create-env bosh) does not use these
esac

cat <<-YAML
  s3_blobstore_bucket: (( vault meta.vault_tf "/ocfp/${OCFP_ENV_TYPE}/blobstore/bosh:name" ))
  s3_blobstore_region: ${OCFP_REGION} # TODO: check if needs to be set in ^^^
  
  dns_cache: true # DNS Caching (for runtime config)

YAML

